from typing import Literal, cast

LockConfigActionsItem = Literal['PERMALOCK_ACCESS_PASSWORD', 'PERMALOCK_EPC_BANK', 'PERMALOCK_KILL_PASSWORD', 'PERMALOCK_USER_BANK', 'READ_WRITE_LOCK_ACCESS_PASSWORD', 'READ_WRITE_LOCK_KILL_PASSWORD', 'READ_WRITE_UNLOCK_ACCESS_PASSWORD', 'READ_WRITE_UNLOCK_KILL_PASSWORD', 'WRITE_LOCK_EPC_BANK', 'WRITE_LOCK_TID_BANK', 'WRITE_LOCK_USER_BANK', 'WRITE_UNLOCK_TID_BANK', 'WRITE_UNLOCK_USER_BANK']

LOCK_CONFIG_ACTIONS_ITEM_VALUES: set[LockConfigActionsItem] = { 'PERMALOCK_ACCESS_PASSWORD', 'PERMALOCK_EPC_BANK', 'PERMALOCK_KILL_PASSWORD', 'PERMALOCK_USER_BANK', 'READ_WRITE_LOCK_ACCESS_PASSWORD', 'READ_WRITE_LOCK_KILL_PASSWORD', 'READ_WRITE_UNLOCK_ACCESS_PASSWORD', 'READ_WRITE_UNLOCK_KILL_PASSWORD', 'WRITE_LOCK_EPC_BANK', 'WRITE_LOCK_TID_BANK', 'WRITE_LOCK_USER_BANK', 'WRITE_UNLOCK_TID_BANK', 'WRITE_UNLOCK_USER_BANK',  }

def check_lock_config_actions_item(value: str) -> LockConfigActionsItem:
    if value in LOCK_CONFIG_ACTIONS_ITEM_VALUES:
        return cast(LockConfigActionsItem, value)
    raise TypeError(f"Unexpected value {value!r}. Expected one of {LOCK_CONFIG_ACTIONS_ITEM_VALUES!r}")
